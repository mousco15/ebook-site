// main.js — Page publique : recherche + filtres + pagination + rendu cartes

const listEl = document.getElementById('ebook-list');
const searchEl = document.getElementById('search');
const langEl   = document.getElementById('lang');
const catEl    = document.getElementById('cat');
const prevBtn  = document.getElementById('pagerPrev');
const nextBtn  = document.getElementById('pagerNext');
const pageInfo = document.getElementById('pageInfo');
const countEl  = document.getElementById('count');

const state = { page: 1, pageSize: 8, q: '', language: '', category: '' };

function readFilters(){
  return {
    q: (searchEl?.value || '').trim(),
    language: (langEl?.value || '').trim(),
    category: (catEl?.value || '').trim()
  };
}

function card(e){
  return `
    <article class="card">
      ${e.cover_path
        ? `<img class="cover" src="${e.cover_path}" alt="${e.title || ''}">`
        : `<div class="cover placeholder"></div>`}
      <div class="info">
        <h3>${e.title || ''}</h3>
        <p class="author">${e.author || ''}</p>
        ${e.description ? `<p class="desc">${e.description}</p>` : ''}
        <div class="actions">
          <a class="btn" href="/ebook.html?id=${e.id}">Voir</a>
          ${e.pdf_path ? `<a class="btn" href="${e.pdf_path}" target="_blank" rel="noopener">Télécharger</a>` : ''}
        </div>
      </div>
    </article>
  `;
}

async function load(){
  const { q, language, category } = readFilters();
  const params = new URLSearchParams({
    q, language, category,
    page: String(state.page),
    pageSize: String(state.pageSize)
  });
  listEl.innerHTML = '<div class="loading">Chargement…</div>';

  try{
    const r = await fetch('/api/ebooks?' + params.toString());
    const { items, total, page, pages, hasPrev, hasNext } = await r.json();

    countEl && (countEl.textContent = String(total || 0));
    pageInfo && (pageInfo.textContent = `Page ${page} / ${pages}`);

    if(!Array.isArray(items) || items.length === 0){
      listEl.innerHTML = '<p>Aucun livre pour l’instant.</p>';
    }else{
      listEl.innerHTML = items.map(card).join('');
    }

    prevBtn && (prevBtn.disabled = !hasPrev);
    nextBtn && (nextBtn.disabled = !hasNext);
  }catch(err){
    console.error(err);
    listEl.innerHTML = '<p>Erreur de chargement.</p>';
    prevBtn && (prevBtn.disabled = true);
    nextBtn && (nextBtn.disabled = true);
  }
}

// events
searchEl?.addEventListener('input', ()=>{ state.page = 1; load(); });
langEl?.addEventListener('change', ()=>{ state.page = 1; load(); });
catEl?.addEventListener('input', ()=>{ state.page = 1; load(); });
prevBtn?.addEventListener('click', ()=>{ if(state.page>1){ state.page--; load(); }});
nextBtn?.addEventListener('click', ()=>{ state.page++; load(); });

// first load
load();
body::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url('./A_geometric_digital_illustration.png?v=2') no-repeat center center fixed;
    background-size: cover;
    opacity: 0.3; /* ajuste la transparence */
    z-index: -1;
}
.cover {
  width: 150px;      /* Largeur fixe */
  height: auto;      /* Conserve le ratio */
  object-fit: cover; /* Coupe proprement si l'image est trop grande */
  border-radius: 6px; /* Arrondir les coins (optionnel) */
}
body {
  margin: 0;
  padding: 0;
  background: url('/bg.png') no-repeat center center fixed;
  background-size: cover;
  font-family: Arial, sans-serif;
}

body::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.4); /* assombrissement + opacité */
  z-index: -1;
}
/* ====== POLISH PUBLIC + ADMIN (non destructif) ====== */

/* 1) Conteneurs centrés */
.container{
  max-width: 1100px;      /* centre le contenu et évite l’effet “collé à gauche” */
  margin: 0 auto;
  padding: 16px;
}

/* 2) Barre de filtres (page publique) */
.filters{
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
  justify-content: center;        /* centre les champs */
  margin-bottom: 16px;
}
.filters input[type="search"],
.filters input[type="text"],
.filters select{
  width: min(100%, 280px);
  padding: 10px 12px;
  border: 1px solid rgba(0,0,0,.15);
  border-radius: 10px;
  background: rgba(255,255,255,.85);
  backdrop-filter: blur(3px);
}

/* 3) Cartes “livres” (public + admin) */
.card{
  display: flex;
  gap: 16px;
  align-items: flex-start;
  padding: 16px;
  margin: 12px 0;
  border: 1px solid rgba(0,0,0,.08);
  border-radius: 16px;
  background: rgba(255,255,255,.92);
  box-shadow: 0 6px 18px rgba(0,0,0,.07);
}
.card img.cover{
  flex: 0 0 140px;        /* taille de la jaquette */
  width: 140px;
  height: 190px;
  object-fit: cover;
  border-radius: 10px;
  box-shadow: 0 3px 10px rgba(0,0,0,.1);
}
.card .info{
  flex: 1 1 auto;
  min-width: 0;
}
.card h3{
  margin: 0 0 6px;
  font-size: 20px;
}
.card .author{
  margin: 0 0 10px;
  color: #444;
  font-weight: 600;
}
.card .desc{
  color: #333;
  line-height: 1.5;
}

/* Boutons */
.btn{
  display: inline-block;
  padding: 10px 14px;
  border-radius: 999px;
  border: 1px solid rgba(0,0,0,.15);
  background: white;
  text-decoration: none;
  font-weight: 600;
}
.btn:hover{ filter: brightness(0.97); }

/* 4) Pagination (public) */
.pager{
  display:flex;
  gap:10px;
  justify-content:center;
  margin: 14px 0 24px;
}
.pager button{
  padding: 8px 14px;
  border-radius: 999px;
  border: 1px solid rgba(0,0,0,.15);
  background: rgba(255,255,255,.92);
}

/* 5) Header (public + admin) */
header.container h1{
  text-align: center;     /* titre bien centré */
  margin-bottom: 6px;
}
header.container .subtitle{
  text-align: center;
  color: #333;
}

/* 6) Formulaire d’ajout (page admin) */
#addForm{
  display: grid;
  grid-template-columns: 1fr 1fr;  /* 2 colonnes sur écran large */
  gap: 12px;
  padding: 16px;
  margin: 10px 0 22px;
  border: 1px solid rgba(0,0,0,.08);
  border-radius: 16px;
  background: rgba(255,255,255,.92);
  box-shadow: 0 6px 18px rgba(0,0,0,.07);
}
/* champs pleine largeur dans la grille */
#addForm textarea,
#addForm .actions,
#addForm input[type="file"]{
  grid-column: 1 / -1;
}
#addForm input,
#addForm select,
#addForm textarea{
  width: 100%;
  padding: 10px 12px;
  border: 1px solid rgba(0,0,0,.15);
  border-radius: 10px;
  background: rgba(255,255,255,.96);
}
#addForm button[type="submit"]{
  justify-self: start;
  padding: 10px 16px;
  border-radius: 999px;
  border: 1px solid rgba(0,0,0,.15);
  background: #1971c2;    /* bleu discret */
  color: #fff;
  font-weight: 700;
}

/* 7) Liste d’ebooks (section “Gérer” admin) */
.admin-list{
  display: grid;
  grid-template-columns: 1fr;
  gap: 12px;
}
.admin-list .card{
  align-items: center;
}
.admin-list .card .actions{
  margin-left: auto;
}
.admin-list .card .actions .btn{
  background: #fff;
}

/* 8) Responsive : 1 colonne sous 768px */
@media (max-width: 768px){
  #addForm{ grid-template-columns: 1fr; }
  .card{
    flex-direction: column;
    align-items: center;
    text-align: center;
  }
  .card img.cover{ margin-bottom: 8px; }
}
